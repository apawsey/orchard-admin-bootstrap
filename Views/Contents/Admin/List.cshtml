@using Orchard.Core.Contents.ViewModels;
@{
    var typeDisplayName = Model.TypeDisplayName;
    var pageTitle = T("Manage Content");
    var createLinkText = T("Create New Content");
    if (!string.IsNullOrWhiteSpace(typeDisplayName))
    {
        pageTitle = T("Manage {0} Content", typeDisplayName);
        createLinkText = T("Create New {0}", typeDisplayName);
    }

    Layout.Title = pageTitle;
}

<div class="manage">
    @Html.ActionLink(createLinkText.Text, "Create", new { Area = "Contents", Id = (string)Model.Options.SelectedFilter }, new { @class = "btn btn-primary" })
</div>
@using (Html.BeginFormAntiForgeryPost())
{
    <input id="publishActions" name="Options.BulkAction" type="hidden" value="@ContentsBulkAction.None" />
    <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
    <button name="submit.Filter" type="submit" class="hidden" value="yes please">@T("Apply")</button>

    <div class="form-inline">
        <div class="form-group">
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                    Bulk Actions <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li><a href="javascript:submitForm($('form'), '@ContentsBulkAction.PublishNow');">@T("Publish Now").ToString()</a></li>
                    <li><a href="javascript:submitForm($('form'), '@ContentsBulkAction.Unpublish');">@T("Unpublish").ToString()</a></li>
                    <li><a href="javascript:submitForm($('form'), '@ContentsBulkAction.Remove');">@T("Delete").ToString()</a></li>
                </ul>
            </div>
        </div>
        <div class="form-group">
            <div class="btn-group">
                <select data-toggle="tooltip" data-placement="top" title="@T("Show")" class="btn btn-default" id="filterResults" name="Options.SelectedFilter">
                    @Html.SelectOption((string)Model.Options.SelectedFilter, "", T("any (show all)").ToString())
                    @foreach (var filterOption in Model.Options.FilterOptions)
                    {
                        @Html.SelectOption((string)Model.Options.SelectedFilter, (string)filterOption.Key, (string)filterOption.Value)
                    }
                </select>
                <select data-toggle="tooltip" data-placement="top" title="@T("Ordered by")" class="btn btn-default" id="orderResults" name="Options.OrderBy">
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Created, T("recently created").ToString())
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Modified, T("recently modified").ToString())
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Published, T("recently published").ToString())
                </select>
                <select data-toggle="tooltip" data-placement="top" title="@T("Filter by")" class="btn btn-default" id="contentResults" name="Options.ContentsStatus">
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Latest, T("latest").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Published, T("published").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Draft, T("unpublished").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.AllVersions, T("all versions").ToString())
                </select>
                <button class="btn btn-primary" type="submit" name="submit.Filter" value="yes please">@T("Apply")</button>
            </div>
        </div>
    </div>
    <fieldset class="contentItems bulk-items">
        @Display(Model.ContentItems)
    </fieldset>
    @Display(Model.Pager)
}