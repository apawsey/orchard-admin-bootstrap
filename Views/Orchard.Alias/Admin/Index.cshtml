@model AdminIndexViewModel
           
@using Orchard.Alias
@using Orchard.Alias.ViewModels
@using Orchard.Environment.Configuration
@using Orchard.Utility.Extensions

@{
    var urlPrefix = WorkContext.Resolve<ShellSettings>().RequestUrlPrefix;
    
    Layout.Title = T("Manage Aliases").Text;
    var aliasService = WorkContext.Resolve<IAliasService>();
    AdminIndexOptions options = Model.Options;
    int index = -1;
    
    var pageSizes = new List<int?>() { 10, 50, 100 };
    var defaultPageSize = WorkContext.CurrentSite.PageSize;
    if (!pageSizes.Contains(defaultPageSize)) {
        pageSizes.Add(defaultPageSize);
    }
}

@using (Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Add new Alias").Text, "Add", new { returnurl = HttpContext.Current.Request.RawUrl }, new { @class = "btn btn-primary" })</div>

    <fieldset class="bulk-actions">
        <input id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)" type="hidden" value="@AliasBulkAction.None" />
        <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
        <div class="btn-group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                Bulk Actions <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li><a href="javascript:submitForm($('form'), '@AliasBulkAction.Delete');">@T("Delete").ToString()</a></li>
            </ul>
        </div>
    </fieldset>
    <fieldset class="bulk-actions">
		<label for="filterResults">@T("Sort by:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Order)">
            @Html.SelectOption(options.Order, AliasOrder.Path, T("Path").ToString())
        </select>
		<input type="hidden" name="Page" value="1" />
		<label for="pageSize">@T("Show:")</label>
		<select id="pageSize" name="PageSize">
			@Html.SelectOption((int)Model.Pager.PageSize, 0, T("All").ToString())
			@foreach(int size in pageSizes.OrderBy(p => p)) {
				@Html.SelectOption((int)Model.Pager.PageSize, size, size.ToString())
			}
		</select>
        <button class="btn btn-primary" type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>
    <fieldset class="table-responsive">
        <table class="table table-hover table-bordered items">
            <thead>
                <tr>
                    <th scope="col"><input type="checkbox" class="check-all" /></th>
                    <th scope="col">@T("Alias")</th>
                    <th scope="col">@T("Route")</th>
                    <th class="text-right" scope="col">@T("Actions")</th>
                </tr>
            </thead>
            @foreach (var aliasEntry in Model.AliasEntries)
            {
                var alias = aliasEntry.Alias;
                index++;
                var virtualPathData = aliasService.LookupVirtualPaths(alias.RouteValues.ToRouteValueDictionary(), ViewContext.HttpContext).FirstOrDefault();

                if (virtualPathData == null)
                {
                    continue;
                }

                var url = virtualPathData.VirtualPath;
                <tr>
                    <td>
                        <input type="hidden" value="@alias.Path" name="@Html.FieldNameFor(m => Model.AliasEntries[index].Alias.Path)" />
                        <input type="checkbox" value="true" name="@Html.FieldNameFor(m => Model.AliasEntries[index].IsChecked)" />
                    </td>
                    <td>
                        @Html.Link(alias.Path == String.Empty ? "/" : alias.Path, Href("~/" + urlPrefix + alias.Path))
                    </td>
                    <td>
                        @Html.Link(url, Href("~/" + urlPrefix + "/" + url))
                    </td>
                    <td class="text-right">
                        @Html.ActionLink(T("Edit").Text, "Edit", new { path = alias.Path == String.Empty ? "/" : alias.Path })
                        |
                        @Html.ActionLink(T("Delete").Text, "Delete", new { path = alias.Path }, new { itemprop = "UnsafeUrl RemoveUrl" })
                    </td>
                </tr>
            }
        </table>

        @Display(Model.Pager)
    </fieldset>
}