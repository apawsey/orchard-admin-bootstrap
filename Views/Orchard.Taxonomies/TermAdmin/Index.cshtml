@model TermAdminIndexViewModel
@using Orchard.Taxonomies.ViewModels;

@using Orchard.Taxonomies.Helpers;
@{
    Style.Include("admin-taxonomy.css");
    Layout.Title = T("Manage terms for {0}", Model.Taxonomy.Name).ToString();

    var termIndex = 0;
}

@using(Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()
    @Html.HiddenFor(m=>m.TaxonomyId)
    <fieldset class="bulk-actions">
        <input id="publishActions" name="@Html.NameOf(m => m.BulkAction)" type="hidden" value="@TermsAdminIndexBulkAction.None" />
        <button name="submit.BulkEdit" type="submit" class="hidden" value="@T("Apply")">@T("Apply")</button>
        <div class="btn-group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                Bulk Actions <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li><a href="javascript:submitForm($('form'), '@TermsAdminIndexBulkAction.Delete');">@T("Delete").ToString()</a></li>
                <li><a href="javascript:submitForm($('form'), '@TermsAdminIndexBulkAction.Move');">@T("Move").ToString()</a></li>
            </ul>
        </div>
    </fieldset>
    <div class="manage">@Html.ActionLink(T("Add a term").ToString(), "SelectTerm", new { taxonomyId = Model.Taxonomy.Id }, new { @class = "btn btn-primary" })</div>
    <fieldset class="table-responsive">
        <table class="table table-hover table-bordered items" summary="@T("This is a table of the terms in your application")">
            <colgroup>
                <col id="Col1" />
                <col id="Col2" />
            </colgroup>
            <thead>
                <tr>
                    <th scope="col">@T("Name")</th>
                    <th class="text-right" scope="col">@T("Actions")</th>
                </tr>
            </thead>
            @foreach (var termEntry in Model.Terms)
            {
                var ti = termIndex;
                <tr>
                    <td>
                        <input type="hidden" value="@Model.Terms[termIndex].Id" name="@Html.NameOf(m => m.Terms[ti].Id)" />
                        @* Tabs for levels *@ @for (var i = 1; i <= termEntry.GetLevels(); i++)
                        { <span class="gap">&nbsp;</span> }
                        <input type="checkbox" value="true" name="@Html.NameOf(m => m.Terms[ti].IsChecked)" />
                        @Html.ItemDisplayLink(termEntry.Name, termEntry.ContentItem)
                    </td>
                    <td class="text-right">
                        @Html.ItemEditLink(T("Edit").Text, termEntry.ContentItem, new { returnUrl = Url.Action("Index", "TermAdmin", new { taxonomyId = Model.Taxonomy.Id }) }) |
                        @Html.ActionLink(T("Move").ToString(), "MoveTerm", new { taxonomyId = Model.Taxonomy.Id, termIds = termEntry.Id })
                    </td>
                </tr>
                        termIndex++;
            }
        </table>
    </fieldset>
}